apply plugin: 'kotlin'
apply plugin: 'jacoco'
apply plugin: "io.gitlab.arturbosch.detekt"
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'com.novoda.bintray-release'

buildscript {
    ext.detekt_version = '1.0.0.RC6'

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.24.0"
    compileOnly "com.android.support:support-annotations:27.1.1"

    testCompile "junit:junit:4.12"
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

kotlin {
    experimental {
        coroutines 'enable'
    }
}

detekt {
    version = "$detekt_version"
    profile("main") {
        //noinspection GroovyAssignabilityCheck
        input = "$projectDir/src/main/kotlin"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "short"
    }
}

test { finalizedBy jacocoTestReport }

check { //noinspection GroovyAssignabilityCheck
    finalizedBy detektCheck
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

coveralls {
    sourceDirs = sourceSets.main.allSource.srcDirs.flatten().asList()
    jacocoReportPath = "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
}

jacocoTestReport { finalizedBy tasks.coveralls }

tasks.coveralls {
    onlyIf { System.env.'CI' }
}

publish {
    bintrayUser = System.getenv('BINTRAY_USER') ?: System.getProperty('BINTRAY_USER') ?: "unknown"
    bintrayKey = System.getenv('BINTRAY_KEY') ?: System.getProperty('BINTRAY_KEY') ?: "unknown"

    userOrg = 'appmattus'
    groupId = 'com.appmattus'
    artifactId = 'leaktracker'
    publishVersion = System.getenv('TRAVIS_TAG') ?: System.getProperty('TRAVIS_TAG') ?: "unknown"
    desc = 'A memory leak tracking library for Android and Java'
    website = 'https://github.com/appmattus/leaktracker'

    dryRun = false
}
